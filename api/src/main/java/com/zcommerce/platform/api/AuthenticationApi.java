/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.zcommerce.platform.api;

import com.zcommerce.platform.api.model.AuthResponse;
import com.zcommerce.platform.api.model.LoginRequest;
import com.zcommerce.platform.api.model.MessageResponse;
import com.zcommerce.platform.api.model.RegisterRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-16T03:23:32.468932+05:30[Asia/Kolkata]")
@Validated
@Tag(name = "Authentication", description = "the Authentication API")
public interface AuthenticationApi {

    /**
     * GET /api/v1/auth/health
     *
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "healthCheck",
        tags = { "Authentication" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MessageResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/auth/health",
        produces = { "application/json" }
    )
    ResponseEntity<MessageResponse> healthCheck(
        
    );


    /**
     * POST /api/v1/auth/login
     *
     * @param loginRequest  (required)
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "login",
        tags = { "Authentication" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AuthResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1/auth/login",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<AuthResponse> login(
        @Parameter(name = "LoginRequest", description = "", required = true) @Valid @RequestBody LoginRequest loginRequest
    );


    /**
     * POST /api/v1/auth/register
     *
     * @param registerRequest  (required)
     * @return Success (status code 201)
     */
    @Operation(
        operationId = "register",
        tags = { "Authentication" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AuthResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1/auth/register",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<AuthResponse> register(
        @Parameter(name = "RegisterRequest", description = "", required = true) @Valid @RequestBody RegisterRequest registerRequest
    );

}
